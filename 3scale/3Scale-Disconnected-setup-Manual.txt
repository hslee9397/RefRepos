------------- docker registory -------

Edit the docker registry :

1. OCP master node add following in /etc/sysconfig/docker file 

added : --insecure-registry docker-registry-default.13.251.251.251.nip.io --insecure-registry docker-registry.default.svc:5000 --insecure-registry 172.30.1.1:5000'
example :
----
OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false --insecure-registry 172.30.0.0/16 --insecure-registry docker-registry-default.13.251.251.251.nip.io --insecure-registry docker-registry.default.svc:5000 --insecure-registry 172.30.1.1:5000'
---

2. add registries in /etc/containers/registries.conf

example : registries = ['docker-registry.default.svc:5000']
--------------------


registry : docker-registry-default.127.0.0.1.nio.io
login : docker login -u <ocp user> -p <token from ocp > docker-registry-default.13.251.251.251.nip.io
        docker login -u sidda -p GNyiqTGefZlQhayiXcLyij5hjDCf1oUhmJJYE_gMU5A docker-registry-default.13.251.251.251.nip.io
********************
steps - docker help
********************
oc login https://13.251.251.251.nip.io:8443 --token=GNyiqTGefZXcLyij5hjDCf1oUhmJJYEA

-> Creating image stream in specific project

oc create is <image name> -n <project name>

->tag the image stream
docker tag <tag name like - latest>/<image name> docker-registry-default.13.251.251.251.nip.io/<project name>/<image name>

--> push the image 

docker push docker-registry-default.13.251.251.251.nip.io/<project name>/<image name>

//////////////////////////////////// laptop/desktop/terminal where OCP and internet connectivity ////////
export rh_reg=registry.access.redhat.com
export my_reg=docker-registry-default.13.251.251.251.nip.io

->Vinay Git : 
	wget https://raw.githubusercontent.com/VinayBhalerao/3scale-on-prem-install/master/resources/amp.yml --no-check-certificate
	
	oc new-app --file https://raw.githubusercontent.com/VinayBhalerao/3scale-on-prem-install/master/resources/amp.yml --param TENANT_NAME=3scale --param WILDCARD_DOMAIN=13.251.251.251.nip.io
	
->OCP templet:

	//wget https://raw.githubusercontent.com/3scale/3scale-amp-openshift-templates/master/amp/amp.yml --no-check-certificate


-->Find registry.access.redhat.com replace with 172.30.1.1:5000

:%s/registry.access.redhat.com/172.30.1.1:5000/g

--> change the 3scale-amp20/memcached:1.4.15 to 3scale-amp22/memcached:1.4.15

docker login -u $(oc whoami) -p $(oc whoami -t) $my_reg

oc new-project  rhscl
oc new-project  3scale-amp22
oc new-project mli-dev

oc policy add-role-to-user system:image-puller system:serviceaccount:mli-dev:default -n 3scale-amp22
oc policy add-role-to-user system:image-puller system:serviceaccount:mli-dev:default -n rhscl

oc policy add-role-to-user system:image-puller system:serviceaccount:mysso:default -n rhscl

"mysql:${MYSQL_IMAGE_STREAM_TAG}"
mysql-57-rhel7
*****************
3 Scale images :
******************

docker pull registry.access.redhat.com/3scale-amp22/system:1.7
docker pull registry.access.redhat.com/3scale-amp22/backend:1.6
docker pull registry.access.redhat.com/3scale-amp22/apicast-gateway:1.8
docker pull registry.access.redhat.com/3scale-amp22/wildcard-router:1.6
docker pull registry.access.redhat.com/3scale-amp20/memcached:1.4.15
docker pull registry.access.redhat.com/rhscl/postgresql-95-rhel7:9.5
docker pull registry.access.redhat.com/3scale-amp22/zync:1.6
docker pull registry.access.redhat.com/rhscl/redis-32-rhel7:3.2
docker pull registry.access.redhat.com/rhscl/mysql-57-rhel7:5.7-5

for SSO 
docker pull centos/mysql-57-centos7

172.30.1.1:5000
docker-registry:5000
/\/\/\//\\/\/\/\/\/\//\ not required /\/\/\/\/\/\/\/\/
Image Stream
-----------
oc create is memcached -n 3scale-amp22
oc create is wildcard-router -n 3scale-amp22
oc create is apicast-gateway -n 3scale-amp22
oc create is zync -n 3scale-amp22
oc create is backend -n 3scale-amp22
oc create is system -n 3scale-amp22

oc create is redis-32-rhel7 -n 3scale-amp22
oc create is mysql-57-rhel7 -n 3scale-amp22
/\/\/\//\\/\/\/\/\/\//\ end /\/\/\/\/\/\/\/\/
tag :
---------
docker tag $rh_reg/3scale-amp22/system:1.7 $my_reg/3scale-amp22/system:1.7
docker tag $rh_reg/3scale-amp22/backend:1.6 $my_reg/3scale-amp22/backend:1.6
docker tag $rh_reg/3scale-amp22/apicast-gateway:1.8 $my_reg/3scale-amp22/apicast-gateway:1.8 
docker tag $rh_reg/3scale-amp22/wildcard-router:1.6 $my_reg/3scale-amp22/wildcard-router:1.6
docker tag $rh_reg/3scale-amp20/memcached:1.4.15 $my_reg/3scale-amp22/memcached:1.4.15
docker tag $rh_reg/rhscl/postgresql-95-rhel7:9.5 $my_reg/rhscl/postgresql-95-rhel7:9.5
docker tag $rh_reg/3scale-amp22/zync:1.6 $my_reg/3scale-amp22/zync:1.6
docker tag $rh_reg/rhscl/redis-32-rhel7:3.2 $my_reg/rhscl/redis-32-rhel7:3.2
docker tag $rh_reg/rhscl/mysql-57-rhel7:5.7-5 $my_reg/rhscl/mysql-57-rhel7:5.7-5

for SSO 
docker tag centos/mysql-57-centos7:5.7 $my_reg/openshift/mysql:5.7
docker tag docker-registry-default.13.251.251.251.nip.io/openshift/mysso $my_reg/openshift/mysso

docker tag docker-registry-default.13.251.251.251.nip.io/rhscl/mysso $my_reg/rhscl/mysso
------

push images :
-------------
docker push $my_reg/3scale-amp22/system:1.7
docker push $my_reg/3scale-amp22/backend:1.6
docker push $my_reg/3scale-amp22/apicast-gateway:1.8 
docker push $my_reg/3scale-amp22/wildcard-router:1.6
docker push $my_reg/3scale-amp22/memcached:1.4.15
docker push $my_reg/rhscl/postgresql-95-rhel7:9.5
docker push $my_reg/3scale-amp22/zync:1.6
docker push $my_reg/rhscl/redis-32-rhel7:3.2
docker push $my_reg/rhscl/mysql-57-rhel7:5.7-5

For SSO :
docker push  $my_reg/openshift/mysql:5.7
docker push  $my_reg/openshift/mysso

$my_reg/rhscl/mysso

-----------------
deploying in OCP 
----------------

oc project mli-dev

oc new-app --file /Users/msidda/Documents/3Scale/MLI/amp22-Vinay.yml --param TENANT_NAME=3scale --param WILDCARD_DOMAIN=13.251.251.251.nip.io >> /tmp/3scale_amp_provision_details.txt

oc new-app --file amp-new.yml --param TENANT_NAME=3scale --param WILDCARD_DOMAIN=13.251.251.251.nip.io >> /tmp/3scale_amp_provision_details.txt


Example : oc process -f https://raw.githubusercontent.com/debianmaster/openshift-examples/master/3scale-api-gateway/3scale.template.yaml WILDCARD_DOMAIN=apig.apps.s8.core.rht-labs.com | oc apply -f-

oc process -f /Users/msidda/Documents/3Scale/MLI/amp22-Vinay.yml WILDCARD_DOMAIN=13.251.251.251.nip.io | oc apply -f-

oc process -f /Users/msidda/Documents/3Scale/MLI/amp22-Vinay.yml WILDCARD_DOMAIN=13.251.251.251.nip.io | oc apply -f-

oc process -f amp.yml -p WILDCARD_DOMAIN=13.251.251.251.nip.io -f amp.yml | oc apply -f-

validate : 
cat amp.yml  | sed 's/'"$rh_reg"'/'"$reg_ip"':5000/g'  | oc process -p WILDCARD_DOMAIN=$wildcard_domain -f amp.yml  >> amp-new.yml
cat amp.yml  | sed 's/'"$rh_reg"'/'"$reg_ip"':5000/g' >> amp-new.yml
**** to delete **
oc process -f /Users/msidda/Documents/3Scale/MLI/amp22-Vinay.yml WILDCARD_DOMAIN=13.251.251.251.nip.io | oc delete  -f-
********


---------------
Resume / rollout POD's 
----------------

1. Resume database tier pods

for x in backend-redis system-memcache system-mysql system-redis zync-database; do echo Resuming dc:  $x; sleep 2; oc rollout resume dc/$x; done

Verify all pods are running

oc get pods (4 pods should be running)

2. Resume backend listener and worker deployments:

for x in backend-listener backend-worker; do echo Resuming dc:  $x; sleep 2; oc rollout resume dc/$x; done

3. Resume the system-app and its two containers:

oc rollout resume dc/system-app

4. Resume additional system and backend application utilities:

for x in system-resque system-sidekiq backend-cron system-sphinx; do echo Resuming dc:  $x; sleep 2; oc rollout resume dc/$x; done

5. Resume apicast gateway deployments:

for x in apicast-staging apicast-production; do echo Resuming dc:  $x; sleep 2; oc rollout resume dc/$x; done

6. Resume remaining deployments:

for x in apicast-wildcard-router zync; do echo Resuming dc:  $x; sleep 2; oc rollout resume dc/$x; done